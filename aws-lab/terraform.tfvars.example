# ------------------------------------------------------------------------------
# File: terraform.tfvars.example
# Author: Kezie Iroha
# Description: Variables for single-region, multi-AZ deployment with Load Balancing and Auto Scaling
# ------------------------------------------------------------------------------

aws_region       = "us-east-1"
aws_account_id   = "123456789012"
vpc_name         = "my-lab-vpc"
key_name         = "my-key-pair"
private_key_path = "~/.ssh/my-key.pem"

# Multi-AZ deployment within a single region
vpc_cidr_block     = "10.0.0.0/16"
private_subnets    = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
public_subnets     = ["10.0.4.0/24", "10.0.5.0/24", "10.0.6.0/24"]
availability_zones = ["us-east-1a", "us-east-1b", "us-east-1c"]

# Deployment Strategy Options
deploy_ec2_tiers   = false # Deploy standalone EC2 instances (without auto scaling)
deploy_auto_scaling = true  # Deploy with load balancing and auto scaling

# EC2 Tier Deployment Options (applies to both standalone EC2 and ASG)
deploy_web_tier = true # Deploy Web Tier
deploy_app_tier = true # Deploy App Tier

# Optional AZ override for standalone EC2 instances (when deploy_ec2_tiers = true)
deploy_alternate_az_set = false # Deploy HA instances across AZs for standalone EC2
ec2_az_overrides = {
  web = "us-east-1a"
  app = "us-east-1b"
}

# EC2 Instance Types
instance_types = {
  web     = "t2.micro"
  app     = "t2.micro"
  bastion = "t2.micro"
}

# SSH and SSM Access
enable_ssh = true
enable_ssm = true

# Environment: dev, staging, prod
environment = "dev"

# Take final backup before destroying a cluster (typically false for labs)
skip_final_snapshot = true

# Protect database from deletion
db_deletion_protection = false

# DB Engine: aurora-postgresql | postgres
db_engine = "postgres"

# aurora_postgresql option: aurora | postgres option: multi_az_cluster, multi_az_instance, single_instance
rds_deployment_type = "single_instance"

# Database Configuration
database_name      = "mydb"
db_master_username = "postgres"
db_master_password = "yourSecurePassword123!" # Change in real deployment

# rds db_instance_class: db.t3.micro, db.t3.small, db.t3.medium, db.t3.large, db.t3.xlarge, db.t3.2xlarge, db.t3.2xlarge, db.t3.4xlarge, db.t3.8xlarge, db.t3.16xlarge
# aurora db_instance_class: db.t3.medium, db.t3.large, db.t3.xlarge, db.t3.2xlarge, db.t3.2xlarge, db.t3.4xlarge, db.t3.8xlarge, db.t3.16xlarge
# aws rds describe-orderable-db-instance-options --engine aurora-postgresql --query "OrderableDBInstanceOptions[].DBInstanceClass" --output text
db_instance_class = "db.t3.micro"

db_cluster_identifier         = "rds-db"
db_cluster_instance_class     = "db.t3.micro" # aws rds describe-orderable-db-instance-options --engine aurora-postgresql --query "OrderableDBInstanceOptions[].DBInstanceClass" --output text 
db_cluster_instance_count     = 1
db_engine_version             = "16.3"       # aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"
db_parameter_group_family_rds = "postgres16" # postgres16, postgres15, postgres14, postgres13, postgres12

# Database Storage Configuration
db_allocated_storage     = 50 # minimum for aurora cluster is 100
db_max_allocated_storage = 100
db_storage_type          = "gp3" # gp2, gp3, or io1
db_iops                  = 1000  # Only used with io1 storage type

# IAM Authentication
db_iam_user = "iam_db_user"

# ------------------------------------------------------------------------------
# Load Balancing and Auto Scaling Configuration
# ------------------------------------------------------------------------------

# Load Balancer Configuration
enable_alb_access_logs = false
#alb_access_logs_bucket = "my-alb-logs-bucket" # Uncomment and set if enable_alb_access_logs is true
web_health_check_path = "/"
app_health_check_path = "/health"

# HTTPS Configuration
enable_https = false
#certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/abcd1234-5678-90ab-cdef-example123456" # Uncomment and set if enable_https is true

# Auto Scaling Configuration
web_asg_config = {
  min_size         = 1
  max_size         = 2
  desired_capacity = 2
}

app_asg_config = {
  min_size         = 1
  max_size         = 2
  desired_capacity = 2
}

# SSH Access for Bastion
allowed_ssh_cidrs = ["0.0.0.0/0"] # Restrict to your IP address in production
